# Generated by Django 4.2.5 on 2023-10-25 23:17

from django.db import migrations, models
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('password', models.CharField()),
                ('age', models.CharField(default=12, max_length=3)),
                ('gender', models.CharField(choices=[('MALE', 'male'), ('FEMALE', 'female')], default='MALE', max_length=6)),
                ('role', models.CharField(choices=[('USER', 'user'), ('HEALTH_PRACTITIONER', 'dietitian/health practitioner')], default='USER', max_length=30)),
                ('no_followers', models.PositiveBigIntegerField(blank=True, default=0)),
                ('no_followings', models.PositiveBigIntegerField(blank=True, default=0)),
                ('dietary_preference', models.CharField(blank=True, choices=[('VEGETARIAN', 'vegetarian'), ('VEGAN', 'vegan'), ('PESCATARIAN', 'pescatarian'), ('GLUTEN_FREE', 'gluten free'), ('DAIRY_FREE', 'dairy free'), ('LOW_CARB', 'low carb')], max_length=50)),
                ('health_goal', models.CharField(choices=[('WEIGHT_LOSS', 'weight loss'), ('MUSCLE_GAIN', 'muscle gain'), ('HEART_HEALTH', 'heart health'), ('LOW_CHOLESTEROL', 'low cholesterol'), ('BETTER_SLEEP', 'better sleep'), ('HEALTHY_AGING', 'healthy aging'), ('OVERALL_WELLNESS', 'overall wellness')], default='OVERALL_WELLNESS', max_length=50)),
                ('allergens', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('MILK', 'milk'), ('EGG', 'egg'), ('PEANUT', 'peanut'), ('SOY', 'soy'), ('WHEAT', 'wheat'), ('TREE_NUTS', 'tree nuts'), ('SHELLFISH', 'shellfish'), ('SESAME', 'sesame'), ('GARLIC', 'garlic')], max_length=50)),
                ('activity_level', models.CharField(choices=[('SEDENTARY', 'sedentary'), ('LIGHTLY_ACTIVE', 'lightly active'), ('MODERATELY_ACTIVE', 'moderately active'), ('VERY_ACTIVE', 'very active'), ('SUPER_ACTIVE', 'super active')], max_length=50)),
                ('cuisines', multiselectfield.db.fields.MultiSelectField(choices=[('ITALIAN', 'Italian'), ('MEDITERRAENIAN', 'Mediterraenian'), ('ASIAN', 'Asian'), ('MEXICAN', 'Mexican'), ('MIDDLE_EASTERN', 'Middle Eastern'), ('AMERICAN', 'American'), ('FRENCH', 'French'), ('INDIAN', 'Indian'), ('AFRICAN', 'African')], default='ITALIAN', max_length=50)),
                ('medical_conditions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('DIABETICS', 'diabetics'), ('HYPERTENSION', 'hypertension'), ('KIDNEY_DISEASE', 'kidney disease'), ('LACTOSE_INTOLERANCE', 'lactose intolerance'), ('FRUCTOSE_INTOLERANCE', 'fructose intolerance'), ('OSTEOPOROSIS', 'osteoporosis'), ('PREGNANCY', 'pregnancy')], max_length=50)),
                ('taste_preferences', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('SWEET', 'sweet'), ('SAVOURY', 'savoury'), ('SPICY', 'spicy'), ('BITTER', 'bitter'), ('SOUR', 'sour'), ('HERBACEOUS', 'herbaceous'), ('UMAMI', 'umami'), ('GARLICKY', 'garlicky'), ('CITRUSY', 'citrusy'), ('MILD', 'mild'), ('AROMATIC', 'aromatic')], max_length=50)),
                ('specialization', models.CharField(blank=True, choices=[('GENERAL', 'General Nutrition'), ('SPORTS', 'Sports Nutrition'), ('PEDIATRIC', 'Pediatric'), ('WEIGHT_LOSS', 'Weight Loss'), ('DIABETICS', 'Diabetics'), ('HEART_HEALTH', 'Heart Health'), ('GASTROENTEROLOGY', 'Gastroenterology'), ('ONCOLOGY', 'Oncology'), ('RENAL', 'Renal Nutrition'), ('VEGAN', 'Vegan and Vegetarian Nutrition'), ('FOOD_ALLERGIES', 'Food Allergies and Intolerance'), ('GERIATRICS', 'Geriatric Nutrition'), ('PREGNANCY', 'Pregnancy and Prenatal Nutrition'), ('POSTPARTUM', 'Postpartum Nutrition'), ('EATING_DISORDERS', 'Eating Disorders'), ('MEAL_PLANNING', 'Meal Planning'), ('CULINARY', 'Culinary Nutrition'), ('NUTRITIONAL_SUPPLEMENTS', 'Nutritional Supplements'), ('PUBLIC_HEALTH', 'Public Health Nutrition'), ('WEIGHT_GAIN', 'Healthy Weight Gain')], max_length=50)),
                ('professional_statement', models.TextField(blank=True, max_length=200)),
                ('availability', models.BooleanField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
